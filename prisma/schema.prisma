generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Alugueis {
  id               String                    @id @default(uuid())
  funcionario_id   String
  artista_id       String
  equipamento_id   String
  data_retirada    DateTime?
  data_devolucao   DateTime?
  valor            Float
  nota             String
  status           alugueis_status           @default(RETIRADA)
  status_pagamento alugueis_status_pagamento @default(PENDENTE)

  funcionario Funcionarios @relation(fields: [funcionario_id], references: [id])
  artista     Artistas     @relation(fields: [artista_id], references: [id])
  equipamento Equipamentos @relation(fields: [equipamento_id], references: [id])
}

model Ambientes {
  id     String           @id @default(uuid())
  nome   String
  status ambientes_status @default(ATIVO)
}

model Artistas {
  id             String           @id @default(uuid())
  nome           String
  data_nacimento DateTime
  email          String
  telefone       String
  whatsapp       Boolean
  bio            String
  foto           String
  status         artistas_status  @default(ATIVO)
  createAt       DateTime         @default(now())
  updateAt       DateTime         @updatedAt
  deletedAt      DateTime?
  Agendamentos   Agendamentos[]
  Alugueis       Alugueis[]
  Banda_artistas Banda_artistas[]
  Bandas         Bandas[]
  Emprestimos    Emprestimos[]
  Eventos        Eventos[]
  Musicas        Musicas[]
}

model Banda_artistas {
  id             String                @id @default(uuid())
  banda_id       String
  artista_id     String
  instrumento_id String
  data_saida     DateTime
  nota           String
  status         banda_artistas_status @default(ATIVO)
  createAt       DateTime              @default(now())
  updateAt       DateTime              @updatedAt
  terminateAt    DateTime?

  banda       Bandas       @relation(fields: [banda_id], references: [id])
  artista     Artistas     @relation(fields: [artista_id], references: [id])
  instrumento Instrumentos @relation(fields: [instrumento_id], references: [id])
}

model Bandas {
  id             String           @id @default(uuid())
  nome           String
  bio            String
  logo           String
  foto           String
  contato_id     String
  status         bandas_status    @default(ATIVA)
  createAt       DateTime         @default(now())
  updateAt       DateTime         @updatedAt
  deletedAt      DateTime?
  Banda_artistas Banda_artistas[]

  contato Artistas @relation(fields: [contato_id], references: [id])
}

model Emprestimos {
  id             String             @id @default(uuid())
  funcionario_id String
  artista_id     String
  data           DateTime           @default(now())
  data_devolucao DateTime?
  duracao        String
  valor          Float
  status         emprestimos_status @default(RETIRADA)
  nota           String

  funcionario Funcionarios @relation(fields: [funcionario_id], references: [id])
  artista     Artistas     @relation(fields: [artista_id], references: [id])
}

model Agendamentos {
  id             String        @id @default(uuid())
  artista_id     String
  funcionario_id String
  date_start     DateTime
  date_end       DateTime
  nota           String
  status         ensaio_status @default(AGENDADO)

  artista     Artistas     @relation(fields: [artista_id], references: [id])
  funcionario Funcionarios @relation(fields: [funcionario_id], references: [id])
  Pagamentos  Pagamentos[]

  @@index([artista_id], map: "agendamentos_artista_id_fkey")
  @@index([funcionario_id], map: "agendamentos_equipamentos_funcionario_id_fkey")
}

model Pagamentos {
  id               String                  @id @default(uuid())
  agendamento_id   String
  date             DateTime
  nota             String
  status_pagamento ensaio_status_pagamento @default(CRIADO)

  agendamento Agendamentos @relation(fields: [agendamento_id], references: [id])

  @@index([agendamento_id], map: "agendamentos_agendamento_id_fkey")
}

model Equipamento_categorias {
  id           String         @id @default(uuid())
  nome         String
  nota         String
  Equipamentos Equipamentos[]
}

model Equipamentos {
  id                        String              @id @default(uuid())
  nome                      String
  data_compra               DateTime?
  marca                     String?
  modelo                    String?
  valor                     Float?
  nota                      String?
  equipamento_categorias_id String
  status                    equipamentos_status @default(DISPONIVEL)
  createAt                  DateTime            @default(now())
  updateAt                  DateTime            @updatedAt
  deletedAt                 DateTime?
  Alugueis                  Alugueis[]

  equipamento_categorias Equipamento_categorias @relation(fields: [equipamento_categorias_id], references: [id])

  @@index([equipamento_categorias_id], map: "equipamentos_equipamento_categorias_id_fkey")
}

model Eventos {
  id               String                   @id @default(uuid())
  nome             String
  descricao        String
  funcionario_id   String
  artista_id       String
  data             DateTime
  duracao          String
  valor            Float
  status           eventos_status           @default(PRODUCAO)
  status_pagamento eventos_status_pagamento @default(PENDENTE)
  nota             String

  funcionario Funcionarios @relation(fields: [funcionario_id], references: [id])
  artista     Artistas     @relation(fields: [artista_id], references: [id])
}

model Funcionarios {
  id             String              @id @default(uuid())
  nome           String
  apelido        String
  data_nacimento DateTime
  papel_id       String
  status         funcionarios_status @default(ATIVO)
  createAt       DateTime            @default(now())
  updateAt       DateTime            @updatedAt
  deletedAt      DateTime?
  Agendamentos   Agendamentos[]
  Alugueis       Alugueis[]
  Emprestimos    Emprestimos[]
  Eventos        Eventos[]

  papel Papeis @relation(fields: [papel_id], references: [id])

  @@index([papel_id], map: "funcionarios_papel_id_fkey")
}

model Papeis {
  id           String         @id @default(uuid())
  nome         String
  nota         String
  Funcionarios Funcionarios[]
}

model Instrumento_categorias {
  id           String         @id @default(uuid())
  nome         String
  nota         String
  Instrumentos Instrumentos[]
}

model Instrumentos {
  id             String              @id @default(uuid())
  nome           String
  nota           String
  categoria_id   String
  status         instrumentos_status @default(ATIVO)
  Banda_artistas Banda_artistas[]

  categoria Instrumento_categorias @relation(fields: [categoria_id], references: [id])
}

model Messages {
  id         String   @id @default(uuid())
  text       String
  created_at DateTime @default(now())
  updateAt   DateTime @updatedAt
  user_id    String

  user User @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "messages_user_id_fkey")
}

model Musicas {
  id       String   @id @default(uuid())
  nome     String
  autor_id String
  nota     String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  autor Artistas @relation(fields: [autor_id], references: [id])
}

model User {
  id         String      @id @default(cuid())
  name       String
  email      String      @unique(map: "User_email_key")
  avatar_url String?
  status     user_status @default(ATIVO)
  password   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
  deletedAt  DateTime?

  Messages Messages[]
}

enum user_status {
  ATIVO
  DESATIVADO
  PENDENCIA
}

enum alugueis_status {
  RETIRADA
  ENTREGUE
  DEVOLVIDO
}

enum alugueis_status_pagamento {
  PENDENTE
  PAGO
  CANCELADO
}

enum ambientes_status {
  ATIVO
  OCUPADO
  MANUTENCAO
  DESATIVADO
}

enum artistas_status {
  ATIVO
  FERIAS
  PARADO
}

enum banda_artistas_status {
  ATIVO
  FERIAS
  SAIU
}

enum bandas_status {
  ATIVA
  FERIAS
  ACABOU
}

enum emprestimos_status {
  RETIRADA
  ENTRERGUE
  DEVOLVIDO
}

enum ensaio_status {
  AGENDADO
  ANDAMENTO
  CANCELADO
}

enum ensaio_status_pagamento {
  CRIADO
  PENDENTE
  PAGO
  CANCELADO
}

enum equipamentos_status {
  DISPONIVEL
  DANIFICADO
  MANUTENCAO
  VENDIDO
  EMPRESTIMO
}

enum eventos_status {
  PRODUCAO
  DIVULGACAO
  ANDAMENTO
  ENCERRADO
  CANCELADO
}

enum eventos_status_pagamento {
  PENDENTE
  PAGO
  CANCELADO
}

enum funcionarios_status {
  ATIVO
  FOLGA
  DESLIGADO
}

enum instrumentos_status {
  ATIVO
  DANIFICADO
  MANUTENCAO
  VENDIDO
  EMRPESTADO
}
